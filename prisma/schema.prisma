// PRISMA CLIENT GENERATOR
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

// PRISMA DATABASE SOURCE 
datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// USER MODEL
model User {
  id        String    @id
  username  String    @unique
  name      String
  email     String?   @unique
  password  String?
  googleId  String?   @unique
  avatarUrl String?
  bio       String?
  createdAt DateTime  @default(now())
  sessions  Session[]
  Post      Post[]
  following Follow[]  @relation("Following")
  followers Follow[]  @relation("Followers")

  @@map("users") // Table name of user model
}

// SESSION MODEL
model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions") // Table name of session model
}

// POSTS MODEL
model Post {
  id        String   @id @default(cuid())
  content   String
  userId    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("posts") // Table name of posts model
}

// FOLLOW MODEL
model Follow {
  followerId  String
  follower    User   @relation("Following", fields: [followerId], references: [id], onDelete: Cascade)
  followingId String
  following   User   @relation("Followers", fields: [followingId], references: [id], onDelete: Cascade)

  @@unique([followerId, followingId])
  @@map("followers")
}
